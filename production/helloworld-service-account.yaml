apiVersion: v1
kind: ServiceAccount
metadata:
  name: helloworld-service-account
---
apiVersion: policy/v1beta1
kind: PodSecurityPolicy
metadata:
  name: helloworld-istio-sidecar
#  annotations:
#    seccomp.security.alpha.kubernetes.io/allowedProfileNames: 'docker/default,runtime/default'
#    apparmor.security.beta.kubernetes.io/allowedProfileNames: 'runtime/default'
#    seccomp.security.alpha.kubernetes.io/defaultProfileName: 'runtime/default'
#    apparmor.security.beta.kubernetes.io/defaultProfileName: 'runtime/default'
spec:
#  privileged: true # Required to prevent escalations to root.
#  allowPrivilegeEscalation: false
  readOnlyRootFilesystem: true
  requiredDropCapabilities:
    - ALL
  allowedCapabilities:
    - NET_ADMIN
    - NET_RAW
  seLinux:
    rule: RunAsAny
  supplementalGroups:
    rule: MustRunAs
    ranges: # Forbid adding the root group.
      - min: 1
        max: 65535
  runAsUser:
    rule: RunAsAny
  fsGroup:
    rule: MustRunAs
    ranges: # Forbid adding the root group.
      - min: 1
        max: 65535
  hostNetwork: false
  hostIPC: false
  hostPID: false
  volumes:
    - 'configMap'
    - 'emptyDir'
    - 'projected'
    - 'secret'
    - 'downwardAPI'
    - 'persistentVolumeClaim'
---
kind: ClusterRole
apiVersion: rbac.authorization.k8s.io/v1
metadata:
  name: helloworld-istio-sidecar-psp
rules:
- apiGroups:
  - extensions
  resourceNames:
  - helloworld-istio-sidecar
  resources:
  - podsecuritypolicies
  verbs:
  - use
---
kind: ClusterRoleBinding
apiVersion: rbac.authorization.k8s.io/v1
metadata:
  name: helloworld-psp:restricted
roleRef:
  kind: ClusterRole
  name: helloworld-istio-sidecar-psp
  apiGroup: rbac.authorization.k8s.io
subjects:
- kind: Group
  name: system:serviceaccounts
  namespace: kube-system
  apiGroup: rbac.authorization.k8s.io
